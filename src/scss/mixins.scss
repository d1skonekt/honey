@mixin fonts($size, $lh, $fw: 400) {
  font-size: $size;
  line-height: $lh;
  font-weight: $fw;
}

// @mixin fontsTypography($fontName, $fontWeight, $fontStyle: normal) {
//   $fontWeightArr: (Thin: 100,
//       ThinItalic: 100,
//       ExtraLight: 200,
//       ExtraLightItalic: 200,
//       Light: 300,
//       LightItalic: 300,
//       Regular: 400,
//       Italic: 400,
//       Medium: 500,
//       MediumItalic: 500,
//       SemiBold: 600,
//       SemiBoldItalic: 600,
//       Bold: 700,
//       BoldItalic: 700,
//       ExtraBold: 800,
//       ExtraBoldItalic: 800,
//       Black: 900,
//       BlackItalic: 900);

//   @font-face {
//     font-display: swap;
//     font-family: $fontName;
//     src: url("../fonts/#{$fontName}/#{$fontWeight}/#{$fontName}-#{$fontWeight}.woff2") format('woff2'),
//     url("../fonts/#{$fontName}/#{$fontWeight}/#{$fontName}-#{$fontWeight}.woff") format('woff');
//     font-weight: map-get($fontWeightArr, $fontWeight);
//     font-style: $fontStyle;
//   }
// }

@mixin backgroundImage($image, $size: auto, $posX: center, $posY: center) {
  background-image: url('/images/#{$image}');
  background-repeat: no-repeat;
  background-position: $posX $posY;
  background-size: $size;
}

@mixin hoveredOpacity($opacityStart, $opacityFinish) {
  opacity: $opacityStart;
  transition: opacity .3s ease;

  &:hover {
    @media (min-width: $lg-min) {
      opacity: $opacityFinish;
    }
  }
}

@mixin hoveredBackground($bg) {
  transition: background-color .3s ease;

  &:hover {
    @media (min-width: $lg-min) {
      background-color: $bg;
    }
  }
}

@mixin inputAutofill($bg, $color) {

  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus,
  &:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0 45px $bg inset !important;
    -webkit-text-fill-color: $color !important;
  }
}

@mixin scrollbar($height, $boxShadow, $bg) {
  height: $height;
  overflow-y: auto;
  overflow-x: hidden;
  padding-right: 10px;

  &::-webkit-scrollbar {
    width: 7px;
  }

  &::-webkit-scrollbar-track {
    border-radius: 10px;
    box-shadow: inset 0 0 5px $boxShadow;
  }

  &::-webkit-scrollbar-thumb {
    background: $bg;
    border-radius: 10px;
  }

  &::-webkit-scrollbar-thumb:hover {
    opacity: .7;
  }
}

@mixin hoverAfterBottomLine($trigger, $bottom, $bg, $height: 1px) {
  transition: color .3s ease;

  &:after {
    content: '';
    position: absolute;
    left: 50%;
    bottom: $bottom;
    background-color: $bg;

    @if $trigger {
      width: 0;
    }

    @else {
      width: 100%;
    }

    height: $height;
    transform: translateX(-50%);
    transition: width .3s ease;
  }

  @media (min-width: $lg-min) {
    &:hover {
      &:after {
        @if $trigger {
          width: 100%;
        }

        @else {
          width: 0;
        }
      }
    }
  }
}

@mixin showX($start, $finish, $time, $str, $delay: 0s, $media: 2500px) {
  @keyframes showX#{$start}#{$str}#{$media} {
    0% {
      opacity: 0;
      transform: translateX($start);
    }

    100% {
      opacity: 1;
      transform: translateX($finish);
    }
  }

  @media (max-width: $media) {
    animation: showX#{$start}#{$str}#{$media} linear $time forwards $delay;
  }
}

@mixin showY($start, $finish, $time, $str, $delay: 0s, $media: 2500px) {
  @keyframes showY#{$start}#{$str}#{$media} {
    0% {
      opacity: 0;
      transform: translateY($start);
    }

    100% {
      opacity: 1;
      transform: translateY($finish);
    }
  }

  @media (max-width: $media) {
    animation: showY#{$start}#{$str}#{$media} linear $time forwards $delay;
  }
}

@mixin pulse($finish, $time, $str) {
  @keyframes pulse#{$str} {
    0% {
      transform: scale(1);
    }

    50% {
      transform: scale($finish);
    }

    100% {
      transform: scale(1);
    }
  }

  animation: pulse#{$str} linear $time infinite;
}

@mixin topBottomGoing($top, $bottom, $time, $str) {
  @keyframes topBottomGoing#{$str} {
    0% {
      transform: translateY($top);
    }

    50% {
      transform: translateY($bottom);
    }

    100% {
      transform: translateY($top);
    }
  }

  animation: topBottomGoing#{$str} linear $time infinite;
}
